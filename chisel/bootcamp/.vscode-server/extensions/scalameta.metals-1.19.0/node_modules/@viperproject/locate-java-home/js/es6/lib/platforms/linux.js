import { exec } from 'child_process';
import commonFindJavaHome from './common';
/**
 * Find Java in Linux using three methods:
 * - `update-java-alternatives`,
 */
export default function linuxFindJavaHome() {
    return Promise.all([commonFindJavaHome(), useUpdateJavaAlternatives()])
        .then(res => {
        // combine the results:
        return {
            homes: res[0].concat(res[1].homes),
            executableExtension: res[1].executableExtension
        };
    });
}
function useUpdateJavaAlternatives() {
    return new Promise(resolve => {
        exec('update-java-alternatives -l', (err, stdout, stderr) => {
            const discoveredJavaHomes = [];
            // This returns error code 1 on success, for some reason.
            if (!err || err.code == 1) {
                const alts = stdout.toString().trim().split('\n');
                for (const alt of alts) {
                    // "java-1.7.0-openjdk-amd64 1071 /usr/lib/jvm/java-1.7.0-openjdk-amd64"
                    discoveredJavaHomes.push(alt.split(' ')[2]);
                }
            }
            resolve({ homes: discoveredJavaHomes });
        });
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGludXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi90cy9saWIvcGxhdGZvcm1zL2xpbnV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFbkMsT0FBTyxrQkFBa0IsTUFBTSxVQUFVLENBQUM7QUFFMUM7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLE9BQU8sVUFBVSxpQkFBaUI7SUFDdkMsT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsa0JBQWtCLEVBQUUsRUFBRSx5QkFBeUIsRUFBRSxDQUFDLENBQUM7U0FDcEUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1FBQ1YsdUJBQXVCO1FBQ3ZCLE9BQU87WUFDTCxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1lBQ2xDLG1CQUFtQixFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxtQkFBbUI7U0FDaEQsQ0FBQztJQUNKLENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQztBQUVELFNBQVMseUJBQXlCO0lBQ2hDLE9BQU8sSUFBSSxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUU7UUFDM0IsSUFBSSxDQUFDLDZCQUE2QixFQUFFLENBQUMsR0FBaUIsRUFBRSxNQUF1QixFQUFFLE1BQXVCLEVBQUUsRUFBRTtZQUMxRyxNQUFNLG1CQUFtQixHQUFhLEVBQUUsQ0FBQztZQUN6Qyx5REFBeUQ7WUFDekQsSUFBSSxDQUFDLEdBQUcsSUFBVSxHQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsRUFBRTtnQkFDaEMsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDLElBQUksRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDbEQsS0FBSyxNQUFNLEdBQUcsSUFBSSxJQUFJLEVBQUU7b0JBQ3RCLHdFQUF3RTtvQkFDeEUsbUJBQW1CLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztpQkFDN0M7YUFDRjtZQUNELE9BQU8sQ0FBQyxFQUFDLEtBQUssRUFBRSxtQkFBbUIsRUFBQyxDQUFDLENBQUM7UUFDeEMsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2V4ZWN9IGZyb20gJ2NoaWxkX3Byb2Nlc3MnO1xuaW1wb3J0IHtJTG9jYXRlSmF2YUhvbWVSZXN1bHR9IGZyb20gJy4uL2ludGVyZmFjZXMnO1xuaW1wb3J0IGNvbW1vbkZpbmRKYXZhSG9tZSBmcm9tICcuL2NvbW1vbic7XG5cbi8qKlxuICogRmluZCBKYXZhIGluIExpbnV4IHVzaW5nIHRocmVlIG1ldGhvZHM6XG4gKiAtIGB1cGRhdGUtamF2YS1hbHRlcm5hdGl2ZXNgLFxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBsaW51eEZpbmRKYXZhSG9tZSgpOiBQcm9taXNlPElMb2NhdGVKYXZhSG9tZVJlc3VsdD4ge1xuICByZXR1cm4gUHJvbWlzZS5hbGwoW2NvbW1vbkZpbmRKYXZhSG9tZSgpLCB1c2VVcGRhdGVKYXZhQWx0ZXJuYXRpdmVzKCldKVxuICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAvLyBjb21iaW5lIHRoZSByZXN1bHRzOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgaG9tZXM6IHJlc1swXS5jb25jYXQocmVzWzFdLmhvbWVzKSxcbiAgICAgICAgZXhlY3V0YWJsZUV4dGVuc2lvbjogcmVzWzFdLmV4ZWN1dGFibGVFeHRlbnNpb25cbiAgICAgIH07XG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIHVzZVVwZGF0ZUphdmFBbHRlcm5hdGl2ZXMoKTogUHJvbWlzZTxJTG9jYXRlSmF2YUhvbWVSZXN1bHQ+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgIGV4ZWMoJ3VwZGF0ZS1qYXZhLWFsdGVybmF0aXZlcyAtbCcsIChlcnI6IEVycm9yIHwgbnVsbCwgc3Rkb3V0OiBCdWZmZXIgfCBzdHJpbmcsIHN0ZGVycjogQnVmZmVyIHwgc3RyaW5nKSA9PiB7XG4gICAgICBjb25zdCBkaXNjb3ZlcmVkSmF2YUhvbWVzOiBzdHJpbmdbXSA9IFtdO1xuICAgICAgLy8gVGhpcyByZXR1cm5zIGVycm9yIGNvZGUgMSBvbiBzdWNjZXNzLCBmb3Igc29tZSByZWFzb24uXG4gICAgICBpZiAoIWVyciB8fCAoPGFueT5lcnIpLmNvZGUgPT0gMSkge1xuICAgICAgICBjb25zdCBhbHRzID0gc3Rkb3V0LnRvU3RyaW5nKCkudHJpbSgpLnNwbGl0KCdcXG4nKTtcbiAgICAgICAgZm9yIChjb25zdCBhbHQgb2YgYWx0cykge1xuICAgICAgICAgIC8vIFwiamF2YS0xLjcuMC1vcGVuamRrLWFtZDY0IDEwNzEgL3Vzci9saWIvanZtL2phdmEtMS43LjAtb3Blbmpkay1hbWQ2NFwiXG4gICAgICAgICAgZGlzY292ZXJlZEphdmFIb21lcy5wdXNoKGFsdC5zcGxpdCgnICcpWzJdKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmVzb2x2ZSh7aG9tZXM6IGRpc2NvdmVyZWRKYXZhSG9tZXN9KTtcbiAgICB9KTtcbiAgfSk7XG59XG4iXX0=